{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Soal 1\n",
    "Sebutkan pengalaman kamu dalam bahasa pemograman python !"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Pengalaman Selama S1\n",
    "1. Tugas akhir pada M.K. Instrumentasi Kelautan: membuat prototype sistem bendungan yang dapat membuka dan menutup saluran air dengan sistem IoT, serta menampilkan grafik data suhu dan ketinggian muka air di dalam prototype ke dalam web secara real-time\n",
    "2. Tugas akhir M.K. Energi Laut: menampilkan hasil pemetaan energi gelombang dan arus di suatu perairan dengan python\n",
    "3. Tugas akhir M.K. Robotika Bawah Air: membuat prototype ROV \n",
    "4. Mengikuti perlombaan Singapore AUV Challenge 2019 yang menjadi salah satu penanggungjawab untuk pemrograman pergerakan robot bawah air\n",
    "5. Penelitian S1: Perancangan dan Implementasi pendeteksian tingkat kesegaran ikan dengan metode deep learning"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Soal 2\n",
    "Kelas python lanjutan apa saja yang kamu harapkan ada di sanbercode kedepannya ?\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Project Data Science dengan berbagai kasus untuk melatih dan mempertajam pemahamannya"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Soal 3\n",
    "Buatlah sebuah Class yang memiliki beberapa fungsi berikut:<br>\n",
    "a. Mengkapitalisasi huruf pertama sebuah kalimat,<br>\n",
    "b. Mengecilkan semua huruf pada kalimat tersebut,<br>\n",
    "c. Mengkapitalisasi semua huruf pada kalimat, dan<br>\n",
    "d. Memisahkan setiap kata menjadi list."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "class manipulasi :\n",
    "    \n",
    "    def __init__(self, data= \"saya tinggal di Indonesia\") :\n",
    "        self.a = data.capitalize()\n",
    "        self.b = data.lower()\n",
    "        self.c = data.upper()\n",
    "        self.d = data.split()\n",
    "        \n",
    "    def cetak (self) :\n",
    "        print(\"Capitalize: \", self.a, \"\\nLower: \", self.b, \"\\nUpper: \", self.c, \"\\nSplit: \", self.d)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Capitalize:  Saya tinggal di indonesia \n",
      "Lower:  saya tinggal di indonesia \n",
      "Upper:  SAYA TINGGAL DI INDONESIA \n",
      "Split:  ['saya', 'tinggal', 'di', 'Indonesia']\n"
     ]
    }
   ],
   "source": [
    "data_baru = manipulasi()\n",
    "data_baru.cetak()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Capitalize:  Saya tinggal di eropa \n",
      "Lower:  saya tinggal di eropa \n",
      "Upper:  SAYA TINGGAL DI EROPA \n",
      "Split:  ['Saya', 'Tinggal', 'di', 'Eropa']\n"
     ]
    }
   ],
   "source": [
    "data_baru2 = manipulasi(\"Saya Tinggal di Eropa\")\n",
    "data_baru2.cetak()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
